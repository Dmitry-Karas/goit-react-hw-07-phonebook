{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/ContactForm/ContactForm.styled.jsx","services/contactsApi.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","redux/contacts/contactsSlice.js","components/Filter/Filter.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","App.jsx","redux/store.js","index.js"],"names":["Wrapper","Title","Section","title","children","StyledContainer","Container","StyledForm","InputContainer","Input","Label","Button","axios","defaults","baseURL","ContactsAPI","get","data","contact","post","id","delete","fetchContacts","createAsyncThunk","_","a","rejectWithValue","contacts","message","addContact","deleteContact","getFilter","state","filter","getIsLoading","isLoading","getContacts","items","getVisibleContacts","createSelector","name","toLowerCase","includes","number","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","contactsSelectors","nameInputId","nanoid","telInputId","handleChange","e","currentTarget","value","onSubmit","preventDefault","includedName","find","includedNumber","replace","Swal","fire","position","icon","toUpperCase","confirmButtonColor","checkContact","contactsOperations","type","onChange","pattern","autoComplete","placeholder","maxLength","required","htmlFor","size","List","Item","ContactList","map","onClick","contactsSlice","createSlice","initialState","error","reducers","changeFilter","action","payload","extraReducers","builder","addCase","fulfilled","push","addMatcher","isAnyOf","pending","rejected","console","actions","Filter","filterInputId","target","LoaderWrapper","Loader","loading","color","App","useEffect","length","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65309b27.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const Wrapper = styled.section`\n  padding: 40px 0;\n`;\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 50px;\n  margin-left: auto;\n  margin-right: auto;\n\n  text-transform: uppercase;\n  font-size: 32px;\n  text-align: center;\n`;\n","import PropTypes from \"prop-types\";\nimport { Wrapper, Title } from \"./Section.styled\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && <Title>{title}</Title>}\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import styled from \"@emotion/styled/macro\";\n\nexport const StyledContainer = styled.div`\n  width: 800px;\n  margin: 0 auto;\n  padding: 30px;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.5) 0 0 10px 5px;\n\n  background-color: var(--color-bg);\n\n  & h1 {\n    font-size: 40px;\n    margin-bottom: 40px;\n  }\n\n  & h2 {\n    font-size: 28px;\n    margin-bottom: 60px;\n  }\n\n  & h1,\n  h2 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    color: var(--color-dark);\n\n    & svg {\n      margin-right: 10px;\n    }\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { StyledContainer } from \"./Container.styled\";\n\nconst Container = ({ children }) => {\n  return <StyledContainer>{children}</StyledContainer>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import styled from \"@emotion/styled/macro\";\n\nexport const StyledForm = styled.form`\n  width: 450px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  width: 100%;\n  margin-bottom: 40px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 40px;\n  padding-left: 30px;\n  border: none;\n  border-bottom: 1px solid tan;\n\n  font-size: 20px;\n  color: var(--color-accent);\n  background-color: transparent;\n\n  &::placeholder {\n    opacity: 0;\n\n    color: var(--color-accent);\n\n    transition: opacity 250ms ease;\n  }\n\n  &:focus {\n    outline: none;\n    border-color: var(--color-accent);\n\n    &::placeholder {\n      opacity: 0.7;\n      transition-delay: 250ms;\n    }\n  }\n\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    transform: translate(-32px, -30px);\n    font-size: 14px;\n    text-transform: uppercase;\n    font-weight: 600;\n    color: var(--color-accent);\n\n    & svg {\n      color: var(--color-accent);\n      transform: translate(32px, 30px);\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  left: 0;\n  bottom: 5px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n  cursor: text;\n  font-size: 20px;\n\n  color: var(--color-light);\n\n  transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n\n  & svg {\n    margin-right: 10px;\n    transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px 10px;\n  cursor: pointer;\n  border: 2px solid tan;\n  border-radius: 4px;\n\n  font-size: 20px;\n  text-transform: uppercase;\n  color: var(--color-light);\n  background-color: transparent;\n\n  transition: all 250ms ease-in-out;\n\n  &:hover {\n    border-color: var(--color-accent);\n    color: var(--color-accent);\n  }\n\n  & svg {\n    margin-right: 10px;\n  }\n`;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://61156ec88f38520017a384ea.mockapi.io\";\n\nexport class ContactsAPI {\n  static async fetchContacts() {\n    const { data } = await axios.get(\"/contacts\");\n\n    return data;\n  }\n\n  static async addContact(contact) {\n    const { data } = await axios.post(\"/contacts\", contact);\n\n    return data;\n  }\n\n  static async deleteContact(id) {\n    await axios.delete(`/contacts/${id}`);\n  }\n}\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { ContactsAPI } from \"services/contactsApi\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/getContacts\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await ContactsAPI.fetchContacts();\n\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addContact\",\n  async (contact, { rejectWithValue }) => {\n    try {\n      const data = await ContactsAPI.addContact(contact);\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (id, { rejectWithValue }) => {\n    try {\n      await ContactsAPI.deleteContact(id);\n\n      return id;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getIsLoading = (state) => state.contacts.isLoading;\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.includes(filter)\n    );\n  }\n);\n","import Swal from \"sweetalert2\";\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  StyledForm,\n  InputContainer,\n  Input,\n  Label,\n  Button,\n} from \"./ContactForm.styled\";\nimport { FiUser, FiPhone, FiUserPlus } from \"react-icons/fi\";\nimport { contactsOperations, contactsSelectors } from \"redux/contacts\";\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const nameInputId = nanoid();\n  const telInputId = nanoid();\n\n  const checkContact = (contacts, name, number) => {\n    const includedName = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const includedNumber = contacts.find(\n      (contact) =>\n        contact.number.replace(/[^0-9]/g, \"\") === number.replace(/[^0-9]/g, \"\")\n    );\n\n    if (includedName) {\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: `${name.toUpperCase()}\\nis already in contacts!`,\n        confirmButtonColor: \"indianred\",\n      });\n\n      return includedName;\n    }\n\n    if (includedNumber) {\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: `This number is already in contacts as\\n${includedNumber.name.toUpperCase()}`,\n        confirmButtonColor: \"indianred\",\n      });\n      return includedNumber;\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const existedContact = checkContact(contacts, name, number);\n\n    if (existedContact) return;\n\n    dispatch(contactsOperations.addContact({ /*id: nanoid(),*/ name, number }));\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <InputContainer>\n        <Input\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          autoComplete=\"off\"\n          placeholder=\"Dmitry Karas\"\n          maxLength=\"40\"\n          required\n        />\n\n        <Label htmlFor={nameInputId}>\n          <FiUser size=\"22\" />\n          Name\n        </Label>\n      </InputContainer>\n\n      <InputContainer>\n        <Input\n          id={telInputId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          autoComplete=\"off\"\n          placeholder=\"444-55-66\"\n          maxLength=\"17\"\n          required\n        />\n        <Label htmlFor={telInputId}>\n          <FiPhone size=\"22\" />\n          Number\n        </Label>\n      </InputContainer>\n\n      <Button type=\"submit\">\n        <FiUserPlus size=\"30\" />\n        add\n      </Button>\n    </StyledForm>\n  );\n};\n\nexport default ContactForm;\n","import styled from \"@emotion/styled/macro\";\n\nexport const List = styled.ul`\n  border-radius: 4px;\n  overflow: hidden;\n`;\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin: 0 auto;\n  padding: 10px 5px;\n  border-bottom: 1px solid rosybrown;\n  text-transform: capitalize;\n\n  & span {\n    display: inline-flex;\n    align-items: center;\n\n    font-weight: 600;\n    color: var(--color-dark);\n\n    &:first-of-type {\n      color: var(--color-accent);\n      margin-right: 10px;\n    }\n\n    & svg {\n      margin-right: 10px;\n      color: var(--color-accent);\n    }\n  }\n\n  & svg {\n    color: var(--color-title);\n  }\n`;\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  padding: 10px;\n  border: none;\n  cursor: pointer;\n\n  background-color: transparent;\n  transition: all 250ms ease-in-out;\n\n  &:hover {\n    color: var(--color-accent);\n    transform: scale(1.3);\n  }\n`;\n","import { BsTrash } from \"react-icons/bs\";\nimport { MdContactPhone } from \"react-icons/md\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"redux/contacts\";\nimport { List, Item, Button } from \"./ContactList.styled\";\n\nconst ContactList = () => {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            <span>\n              <MdContactPhone size=\"20\" />\n              {name}:\n            </span>\n\n            <span>{number}</span>\n\n            <Button\n              onClick={() => dispatch(contactsOperations.deleteContact(id))}\n            >\n              <BsTrash size=\"20\" />\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled/macro\";\n\nexport const InputContainer = styled.div`\n  position: relative;\n  width: 100%;\n  margin-bottom: 40px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 40px;\n  margin-bottom: 40px;\n  padding-left: 40px;\n  border: none;\n  border-bottom: 1px solid tan;\n\n  font-size: 20px;\n  color: var(--color-accent);\n  background-color: transparent;\n\n  transition: all 250ms ease-in-out;\n\n  &::placeholder {\n    opacity: 0;\n\n    color: var(--color-accent);\n\n    transition: opacity 250ms ease;\n  }\n\n  &:focus {\n    outline: none;\n    border-bottom: 1px solid var(--color-accent);\n\n    &::placeholder {\n      opacity: 0.7;\n      transition-delay: 250ms;\n    }\n  }\n\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    transform: translate(-36px, -30px);\n    font-size: 14px;\n    text-transform: uppercase;\n    font-weight: 600;\n    color: var(--color-accent);\n\n    & svg {\n      color: var(--color-accent);\n      transform: translate(36px, 30px);\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  left: 0;\n  bottom: 5px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n  cursor: text;\n\n  font-size: 20px;\n  color: tan;\n\n  transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n\n  & svg {\n    margin-right: 10px;\n    transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n`;\n","import { createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { fetchContacts, addContact, deleteContact } from \"./contactsOperations\";\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: {\n    items: [],\n    filter: \"\",\n    isLoading: false,\n    error: null,\n  },\n  reducers: {\n    changeFilter: (state, action) => {\n      state.filter = action.payload;\n    },\n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchContacts.fulfilled, (state, action) => {\n        state.items = action.payload;\n      })\n      .addCase(addContact.fulfilled, (state, action) => {\n        state.items.push(action.payload);\n      })\n      .addCase(deleteContact.fulfilled, (state, action) => {\n        state.items = state.items.filter(({ id }) => id !== action.payload);\n      })\n      .addMatcher(\n        isAnyOf(\n          fetchContacts.pending,\n          addContact.pending,\n          deleteContact.pending\n        ),\n        (state) => {\n          state.isLoading = true;\n          state.error = null;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          fetchContacts.fulfilled,\n          addContact.fulfilled,\n          deleteContact.fulfilled,\n          fetchContacts.rejected,\n          addContact.rejected,\n          deleteContact.rejected\n        ),\n        (state) => {\n          state.isLoading = false;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          fetchContacts.rejected,\n          addContact.rejected,\n          deleteContact.rejected\n        ),\n        (state, action) => {\n          state.error = action.payload;\n\n          console.error(action.payload);\n        }\n      );\n  },\n});\n\nexport const { changeFilter } = contactsSlice.actions;\nexport default contactsSlice.reducer;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\nimport { AiOutlineFileSearch } from \"react-icons/ai\";\nimport { InputContainer, Input, Label } from \"./Filter.styled\";\nimport { changeFilter } from \"redux/contacts/contactsSlice\";\nimport { contactsSelectors } from \"redux/contacts\";\n\nconst Filter = () => {\n  const filterInputId = nanoid();\n\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <InputContainer>\n        <Input\n          id={filterInputId}\n          type=\"text\"\n          value={value}\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\n          placeholder=\"Dmitry\"\n        />\n        <Label htmlFor={filterInputId}>\n          <AiOutlineFileSearch size=\"30\" />\n          Find contact\n        </Label>\n      </InputContainer>\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from \"@emotion/styled/macro\";\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n`;\n","import PuffLoader from \"react-spinners/PuffLoader\";\nimport { LoaderWrapper } from \"./Loader.styled\";\n\nexport const Loader = ({ loading }) => {\n  return (\n    <LoaderWrapper>\n      <PuffLoader loading={loading} color={\"rosybrown\"} size={400} />\n    </LoaderWrapper>\n  );\n};\n","import { useEffect } from \"react\";\nimport { RiContactsBook2Fill, RiContactsFill } from \"react-icons/ri\";\nimport Section from \"./components/Section/Section\";\nimport Container from \"./components/Container/Container\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"redux/contacts\";\nimport { Loader } from \"components/Loader/Loader\";\n\nconst App = () => {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section>\n        <Container>\n          <h1>\n            <RiContactsBook2Fill />\n            Phonebook\n          </h1>\n\n          <ContactForm />\n\n          {contacts.length > 0 && (\n            <>\n              <h2>\n                <RiContactsFill />\n                Contacts\n              </h2>\n\n              <Filter />\n\n              <ContactList />\n            </>\n          )}\n        </Container>\n      </Section>\n      <Loader loading={isLoading} />\n    </>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"redux/contacts/contactsSlice\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}